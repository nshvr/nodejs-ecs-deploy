AWSTemplateFormatVersion: "2010-09-09"

Description: "ECS deployment"

Parameters:
  DeployEnv:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  AppName:
    Type: String
    Default: "test-ecs-poc"
      
# Mappings:

Resources:
  MyRepository:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub ${DeployEnv}-${AppName}

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${DeployEnv}-${AppName}

  

Outputs:
  EcrRepoName:
    Value: !Ref MyRepository
  EcrRepoArn:
    Value: !GetAtt MyRepository.Arn
  EcrRepoUri:
    Value: !GetAtt MyRepository.RepositoryUri
  TaskRoleArn:
    Description: "The ARN of the ECS Task Role"
    Value: !GetAtt ECSTaskRole.Arn



  # Create an ECS Task Definition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: MyTaskDefinition
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      NetworkMode: bridge
      ContainerDefinitions:
        - Name: MyContainer
          Image: ecs-poc  # Replace with your ECR repository URI and image tag
          Memory: 512
          Cpu: 256
          Essential: true
          PortMappings:
            - ContainerPort: 3000
              HostPort: 80



  # Create an ECS Instance Profile
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ECSTaskExecutionRole

  # Create a Security Group for the ECS Instance
  ECSInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: http
          FromPort: '3000'
          ToPort: '3000'
          CidrIp: 0.0.0.0/0

  # IAM Role for ECS Task
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MyTaskPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - xray:*
                  - s3:*
                  - ses:*
                  - ssm:*
                Resource: *


  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup

  # IAM Role for ECS Task Execution
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MyExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:*
                  - logs:*
                Resource: "*"
